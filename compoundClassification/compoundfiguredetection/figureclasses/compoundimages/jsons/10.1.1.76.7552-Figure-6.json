{"Caption":"Figure 6: Measurements of the EmStar stack on a 700 MHz Pentium III running the 2.4.20 kernel. The throughput graph shows the performance of a single process sending at maximum rate over a 100Mbit Ethernet, as a function of packet length, through different EmStar stacks. The solid curve represents link saturation, while the other curves compare the performance of sending directly to a socket with that of sending through additional layers. The error bars are 95% confidence intervals. The latency graph shows the average round-trip delay of a ping message over the loopback interface, as a function of packet length, through different EmStar stacks. Both graphs show that performance is dominated by per-packet overhead rather than data transfer, consistent with previous results about FUSD. ","ImageText":[{"Text":"Throughput","TextBB":[213.132,98.5443,257.778,106.62],"Rotation":0},{"Text":"test","TextBB":[260.205,98.5443,274.278,106.62],"Rotation":0},{"Text":"over","TextBB":[276.705,98.5443,293.685,106.62],"Rotation":0},{"Text":"100Mbit","TextBB":[296.112,98.5443,327.165,106.62],"Rotation":0},{"Text":"ethernet","TextBB":[329.592,98.5443,361.623,106.62],"Rotation":0},{"Text":"Latency","TextBB":[559.837,98.5443,590.41,106.62],"Rotation":0},{"Text":"Test","TextBB":[592.837,98.5443,609.818,106.62],"Rotation":0},{"Text":"over","TextBB":[612.245,98.5443,629.225,106.62],"Rotation":0},{"Text":"Loopback","TextBB":[631.652,98.5443,669.506,106.62],"Rotation":0},{"Text":"14","TextBB":[142.352,111.64,152.06,119.715],"Rotation":0},{"Text":"udp-dev-linkstats+frag","TextBB":[616.593,118.755,702.716,126.831],"Rotation":0},{"Text":"udp-dev-linkstats","TextBB":[636.733,127.486,702.716,135.561],"Rotation":0},{"Text":"udp-dev","TextBB":[671.174,136.216,702.716,144.292],"Rotation":0},{"Text":"udp-raw","TextBB":[671.182,144.947,702.715,153.022],"Rotation":0},{"Text":"1.2","TextBB":[469.838,124.518,481.973,132.593],"Rotation":0},{"Text":"12","TextBB":[142.352,135.605,152.06,143.681],"Rotation":0},{"Text":"1","TextBB":[477.119,150.315,481.973,158.39],"Rotation":0},{"Text":"Ping","TextBB":[448.03,213.871,456.106,231.34],"Rotation":3},{"Text":"RTT","TextBB":[448.03,194.472,456.106,211.444],"Rotation":3},{"Text":"[msec]","TextBB":[448.03,166.335,456.106,192.045],"Rotation":3},{"Text":"MBytes\/Sec","TextBB":[123.355,175.55,131.431,222.126],"Rotation":3},{"Text":"10","TextBB":[142.352,159.526,152.06,167.602],"Rotation":0},{"Text":"8","TextBB":[147.206,183.49,152.06,191.565],"Rotation":0},{"Text":"6","TextBB":[147.206,207.411,152.06,215.486],"Rotation":0},{"Text":"4","TextBB":[147.206,231.375,152.06,239.45],"Rotation":0},{"Text":"Saturated","TextBB":[319.329,237.223,357.183,245.298],"Rotation":0},{"Text":"UDP","TextBB":[359.61,237.223,378.04,245.298],"Rotation":0},{"Text":"udp-raw","TextBB":[346.507,245.954,378.04,254.029],"Rotation":0},{"Text":"udp-dev","TextBB":[346.499,254.685,378.041,262.76],"Rotation":0},{"Text":"udp-dev+linkstats","TextBB":[309.867,263.415,378.04,271.49],"Rotation":0},{"Text":"udp-dev+linkstats+frag","TextBB":[289.726,272.144,378.041,280.22],"Rotation":0},{"Text":"2","TextBB":[147.206,255.296,152.06,263.371],"Rotation":0},{"Text":"0","TextBB":[147.206,279.26,152.06,287.335],"Rotation":0},{"Text":"6","TextBB":[156.085,287.99,160.939,296.065],"Rotation":0},{"Text":"7","TextBB":[188.605,287.99,193.459,296.065],"Rotation":0},{"Text":"8","TextBB":[221.124,287.99,225.978,296.065],"Rotation":0},{"Text":"9","TextBB":[253.644,287.99,258.498,296.065],"Rotation":0},{"Text":"10","TextBB":[283.737,287.99,293.445,296.065],"Rotation":0},{"Text":"11","TextBB":[316.258,287.99,325.965,296.065],"Rotation":0},{"Text":"12","TextBB":[348.777,287.99,358.485,296.065],"Rotation":0},{"Text":"Log2","TextBB":[234.97,301.085,254.386,309.16],"Rotation":0},{"Text":"of","TextBB":[256.813,301.085,264.094,309.16],"Rotation":0},{"Text":"Packet-Size","TextBB":[266.521,301.085,313.096,309.16],"Rotation":0},{"Text":"[Bytes]","TextBB":[315.523,301.085,342.211,309.16],"Rotation":0},{"Text":"0.8","TextBB":[469.838,176.112,481.973,184.188],"Rotation":0},{"Text":"0.6","TextBB":[469.838,201.911,481.973,209.986],"Rotation":0},{"Text":"0.4","TextBB":[469.838,227.665,481.973,235.74],"Rotation":0},{"Text":"0.2","TextBB":[469.838,253.462,481.973,261.538],"Rotation":0},{"Text":"0","TextBB":[477.119,279.26,481.973,287.335],"Rotation":0},{"Text":"13","TextBB":[381.296,287.99,391.004,296.065],"Rotation":0},{"Text":"14","TextBB":[413.816,287.99,423.524,296.065],"Rotation":0},{"Text":"6","TextBB":[485.998,287.99,490.852,296.065],"Rotation":0},{"Text":"7","TextBB":[511.489,287.99,516.343,296.065],"Rotation":0},{"Text":"8","TextBB":[536.981,287.99,541.835,296.065],"Rotation":0},{"Text":"9","TextBB":[562.474,287.99,567.328,296.065],"Rotation":0},{"Text":"10","TextBB":[585.539,287.99,595.247,296.065],"Rotation":0},{"Text":"11","TextBB":[611.031,287.99,620.739,296.065],"Rotation":0},{"Text":"12","TextBB":[636.523,287.99,646.231,296.065],"Rotation":0},{"Text":"13","TextBB":[662.014,287.99,671.722,296.065],"Rotation":0},{"Text":"Log2","TextBB":[562.264,301.085,581.68,309.16],"Rotation":0},{"Text":"of","TextBB":[584.107,301.085,591.388,309.16],"Rotation":0},{"Text":"Packet-Size","TextBB":[593.815,301.085,640.391,309.16],"Rotation":0},{"Text":"[Bytes]","TextBB":[642.818,301.085,669.506,309.16],"Rotation":0},{"Text":"14","TextBB":[687.508,287.99,697.215,296.065],"Rotation":0},{"Text":"15","TextBB":[712.999,287.99,722.707,296.065],"Rotation":0},{"Text":"16","TextBB":[738.491,287.99,748.199,296.065],"Rotation":0}],"Mention":["Our discussion up to this point has yet to address the cost of\nthis architecture. In order to quantify some of these costs,\nwe performed a series of experiments, the results of which\nare shown in Figure 6. We found that while our architecture\nintroduces a measurable increase in latency and decrease in\nthroughput relative to a highly integrated and optimized so-\nlution, these costs have a negligible impact when applied to\na low bandwidth communications channel. This is an im-\nportant case, since EmStar is intended for WSN applications\nwhich typically are designed to have a high ratio of CPU to\ncommunication.\n","Our second experiment characterized the cost of EmStar in\nterms of latency. In Figure 6(b), our test application sent UDP\n\u201Cping\u201D packets over the loopback interface to a ping replier\non the same machine. We measured the round-trip times for\n1000 packets and averaged them to estimate the latency for\nour four configurations. Since the latency over loopback is\nnegligible (shown in the \u201Cudp-raw\u201D curve), all of the mea-\nsured latency represents EmStar overhead. In each case, a\nping round trip traverses the stack four times, thus is approxi-\nmately 4x the latency of a single traversal. The data show that\ncrossing an EmStar interface costs about 66 microseconds on\nthis architecture, without a strong dependence on the length\nof the message being passed.\n","Our first experiment characterized the cost of EmStar in\nterms of throughput. In Figure 6(a), our test application sent\nUDP packets as quickly as possible over a 100Mbit Ethernet\nchannel. We ran this application over our four configurations,\ncomparing direct sends to a socket with three EmStar config-\nurations. For each configuration, the time required to send\n1000 packets was measured, and the results of 10 such tri-\nals were averaged. The graph shows that per-packet overhead\nprevents the application from saturating the link until larger\n"],"Page":8,"Number":6,"Type":"Figure","CaptionBB":[85,327,789,417],"Height":1100,"Width":850,"DPI":100,"ImageBB":[121,96,750,311]}