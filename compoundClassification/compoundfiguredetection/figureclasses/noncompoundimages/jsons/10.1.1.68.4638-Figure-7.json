{"Caption":"Figure 7: CDF of IP address acquisition latency, with curves showing schemes using DHCP, caching, or both. The median latencies are 1.83 s for a cache miss, 346 ms for a cache hit, and 1.38 s for the combined case. The cache hit rates we observed are between 17% and 22%. ","ImageText":[{"Text":"1","TextBB":[497.41,364.372,502.97,373.962],"Rotation":0},{"Text":"Fraction","TextBB":[463.893,452.457,473.483,488.578],"Rotation":3},{"Text":"of","TextBB":[463.893,441.336,473.483,449.676],"Rotation":3},{"Text":"acquisitions","TextBB":[463.893,386.315,473.483,438.556],"Rotation":3},{"Text":"0.8","TextBB":[489.07,391.955,502.97,401.545],"Rotation":0},{"Text":"0.6","TextBB":[489.07,419.58,502.97,429.17],"Rotation":0},{"Text":"0.4","TextBB":[489.07,447.164,502.97,456.754],"Rotation":0},{"Text":"0.2","TextBB":[489.07,474.789,502.97,484.379],"Rotation":0},{"Text":"0","TextBB":[497.41,502.372,502.97,511.962],"Rotation":0},{"Text":"0","TextBB":[507.58,512.372,513.14,521.962],"Rotation":0},{"Text":"0.5","TextBB":[526.618,512.372,540.518,521.962],"Rotation":0},{"Text":"1","TextBB":[553.996,512.372,559.556,521.962],"Rotation":0},{"Text":"1.5","TextBB":[572.993,512.372,586.893,521.962],"Rotation":0},{"Text":"2","TextBB":[600.371,512.372,605.931,521.962],"Rotation":0},{"Text":"2.5","TextBB":[619.41,512.372,633.31,521.962],"Rotation":0},{"Text":"3","TextBB":[646.788,512.372,652.348,521.962],"Rotation":0},{"Text":"3.5","TextBB":[665.826,512.372,679.726,521.962],"Rotation":0},{"Text":"IP","TextBB":[568.561,527.372,578.011,536.962],"Rotation":0},{"Text":"acquisition","TextBB":[580.791,527.372,628.033,536.962],"Rotation":0},{"Text":"duration","TextBB":[630.813,527.372,666.944,536.962],"Rotation":0},{"Text":"(s)","TextBB":[669.724,527.372,681.384,536.962],"Rotation":0},{"Text":"IP","TextBB":[542.708,547.372,552.158,556.962],"Rotation":0},{"Text":"cached","TextBB":[554.938,547.372,587.179,556.962],"Rotation":0},{"Text":"DHCP","TextBB":[508.83,557.372,537.16,566.962],"Rotation":0},{"Text":"acquisition","TextBB":[539.941,557.372,587.182,566.962],"Rotation":0},{"Text":"4","TextBB":[693.163,512.372,698.723,521.962],"Rotation":0},{"Text":"4.5","TextBB":[712.201,512.372,726.101,521.962],"Rotation":0},{"Text":"5","TextBB":[739.58,512.372,745.14,521.962],"Rotation":0},{"Text":"combined","TextBB":[681.829,547.372,725.18,556.962],"Rotation":0}],"Mention":["in some previous studies [15], possibly because our network condi-\ntions are less controlled and harsher.\nDHCP latency.We found that the time to acquire an IP address\nis often significantly higher than the scanning and association laten-\ncies. The \u201CDHCP acquisition\u201D curve in Figure 7 shows the CDF of\nthe time to acquire an IP address after a successful association when\nusing DHCP (without the caching optimization discussed below).\nThe main reason for the relatively high median and tail DHCP\nlatencies is that when the car successfully associates with an AP,\nit may still be at the \u201Cedge\u201D of the area covered by the AP. As a\nresult, some link-layer frames corresponding to the DHCP request\nor its response may be lost. (The spikes in the CDF at 0.5, 1, and 2\nseconds are artifacts of experimental runs when we set the DHCP\ntimeout to those values.)\nAccelerating initialization. These results show that when a car\nencounters an AP for the first time, it takes a non-negligible amount\nof time before it can actually send or receive data using that AP. We\nnow investigate whether caching can reduce this latency.\nTo reduce scan and association latency, we considered a scheme\nthat would cache mappings between GPS coordinates and a set of\nAPs (with their channel parameters) based on past drives, and use\nthat to avoid re-scanning when the car is near the same location\nagain. Our experimental setup, however, obtains GPS coordinates\nonly once per second, and so the location will be slightly out of date.\n","It is possible to develop techniques that predict the likely current\nlocation using the past few location samples, but we didn\u2019t experi-\nment with that idea because the scan and association times are cur-\nrently a relatively small fraction of the overall idle time. However,\nsuch an optimization may be even more beneficial for 802.11a than\nfor 802.11b, because of the larger number of channels in 802.11a.\nCaching the mapping between an AP\u2019sMAC address (\u201CBSSID\u201D)\nand an IP address granted by the corresponding DHCP server from\nthe previous drive should be a significant win, because a cache hit\ncan eliminate the DHCP delay altogether. Caching the IP address\nthat worked the last time, while honoring the DHCP lease rules,\navoids the need to negotiate a DHCP address. The \u201CIP cached\u201D line\nof Figure 7 shows that a successful cache hit greatly reduces IP\naddress acquisition latency (the median reduces from 1.83 seconds\nto 346 milliseconds). We also found that for our drives the cache hit\nrate was between 17% and 22%.\nThis caching scheme can be improved in several ways. For in-\nstance, we might tag the cache with flags that show to what ex-\ntent the address worked (successful end-to-end ping, successful AP\nping, etc.). Such tagging would be useful because cached addresses\nin the current scheme turn out to have a higher probability of not\nleading to successful AP or end-to-end pings than when DHCP pro-\nvides an address. In addition, we might also try to use a cached ad-\ndress even after the expiration of the lease, after running arping\nto check if the IP is currently being used. Investigating these opti-\nmizations is a topic for future work.\n","This section analyzes the performance of TCP uploads from\nmoving cars. These uploads were done only on a small subset of all\nAP associations. We begin by looking at the time from initial asso-\nciation until we receive the first TCP acknowledgment (ACK). This\ntime distribution, shown in Figure 17 (broken down by IP address\nacquisition method), captures the time taken for short single-packet\nreliable transfers. Observe that the minimum time until any data\nis successfully transmitted is about 5 seconds, which as mentioned\nbefore is mainly an artifact of our resource-constrained implemen-\ntation platform. This time also includes other overheads, including\nfirst-hop router address resolution using ARP (about 1.5 seconds in\nour experiments) and DHCP (if used).\n"],"Page":6,"Number":7,"Type":"Figure","CaptionBB":[439,584,774,655],"Height":1100,"Width":850,"DPI":100,"ImageBB":[461,361,760,569]}