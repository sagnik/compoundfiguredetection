{"Caption":"Figure 4: Scalability of the admission control.","ImageText":[{"Text":"Scalability","TextBB":[556.618,82.9548,591.197,90.0611],"Rotation":0},{"Text":"of","TextBB":[593.333,82.9548,599.74,90.0611],"Rotation":0},{"Text":"the","TextBB":[601.876,82.9548,612.555,90.0611],"Rotation":0},{"Text":"Admission","TextBB":[614.69,82.9548,650.122,90.0611],"Rotation":0},{"Text":"Control","TextBB":[652.258,82.9548,677.019,90.0611],"Rotation":0},{"Text":"100","TextBB":[513.21,94.4784,526.024,101.585],"Rotation":0},{"Text":"Batch-based","TextBB":[625.406,100.52,668.535,107.626],"Rotation":0},{"Text":"Threshold-based","TextBB":[610.893,108.202,668.535,115.308],"Rotation":0},{"Text":"80","TextBB":[517.482,120.459,526.025,127.565],"Rotation":0},{"Text":"CPU","TextBB":[500.778,172.861,507.885,189.079],"Rotation":3},{"Text":"usage","TextBB":[500.778,149.798,507.885,170.726],"Rotation":3},{"Text":"(%)","TextBB":[500.778,135.716,507.885,147.663],"Rotation":3},{"Text":"60","TextBB":[517.482,146.439,526.025,153.546],"Rotation":0},{"Text":"40","TextBB":[517.482,172.387,526.025,179.493],"Rotation":0},{"Text":"20","TextBB":[517.482,198.367,526.025,205.474],"Rotation":0},{"Text":"0","TextBB":[521.753,224.348,526.024,231.454],"Rotation":0},{"Text":"0","TextBB":[528.499,232.031,532.77,239.138],"Rotation":0},{"Text":"20000","TextBB":[692.324,232.031,713.681,239.138],"Rotation":0},{"Text":"5000","TextBB":[565.183,232.031,582.269,239.138],"Rotation":0},{"Text":"10000","TextBB":[606.139,232.031,627.496,239.138],"Rotation":0},{"Text":"15000","TextBB":[649.232,232.031,670.589,239.138],"Rotation":0},{"Text":"Arrival","TextBB":[582.028,243.555,603.792,250.661],"Rotation":0},{"Text":"rate","TextBB":[605.928,243.555,619.165,250.661],"Rotation":0},{"Text":"(req\/sec)","TextBB":[621.301,243.555,651.609,250.661],"Rotation":0}],"Mention":["We measured the CPU utilization at the sentry server for differ-\nent request arrival rates for both the batch-based and the threshold-\nbased admission control. Figure 4 shows our observations of CPU\nutilization with 95% confidence intervals. Since we were inter-\nested only in the overheads of the admission control and not in\nthe data copying overheads inherent in the design of the ktcpvs\nswitch, we forced the sentry to drop all requests after conducting\nthe admission control test. We increased the request arrival rates\ntill the CPU at the sentry server became saturated (nearly 90% uti-\nlization). We observe more than a four-fold improvement in the\nsentry\u2019s scalability\u2014whereas the sentry CPU saturated at 4000 re-\nquests\/sec with the batch-based admission control, it was able to\nhandle almost 19000 requests\/sec with the threshold-based admis-\nsion control.\nA second experiment was conducted to investigate the degrada-\ntion in the decision making due to the threshold-based admission\ncontroller. We repeated the experiment reported in Section 6.2 (Fig-\nure 3) but forced the sentry to employ the threshold-based admis-\nsion controller. The thresholds used by the admission control were\n"],"Page":8,"Number":4,"Type":"Figure","CaptionBB":[483,281,727,294],"Height":1100,"Width":850,"DPI":100,"ImageBB":[498,81,716,253]}