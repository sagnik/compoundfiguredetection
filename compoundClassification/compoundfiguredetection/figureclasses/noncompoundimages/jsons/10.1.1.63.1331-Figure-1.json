{"Caption":"Figure 1: Architecture of the iBundler agency","ImageText":[{"Text":"IBUNDLER","TextBB":[292.005,133.13,313.005,137.437],"Rotation":0},{"Text":"AGENCY","TextBB":[293.225,137.751,313.065,142.059],"Rotation":0},{"Text":"BUYER","TextBB":[147.257,148.149,160.955,152.456],"Rotation":0},{"Text":"(auctioneer)","TextBB":[140.055,152.771,168.157,157.078],"Rotation":0},{"Text":"LOGGER","TextBB":[291.579,150.229,311.072,154.536],"Rotation":0},{"Text":"MANAGER","TextBB":[267.407,175.358,291.226,179.665],"Rotation":0},{"Text":"TRANSLATOR","TextBB":[312.499,175.646,340.758,179.954],"Rotation":0},{"Text":"SOLVER","TextBB":[318.283,204.183,335.262,208.49],"Rotation":0},{"Text":"PROVIDER#1","TextBB":[121.517,218.004,149.204,222.311],"Rotation":0},{"Text":"PROVIDER#2","TextBB":[158.402,218.004,186.088,222.311],"Rotation":0},{"Text":"PROVIDER#n","TextBB":[220.95,218.293,248.895,222.6],"Rotation":0}],"Mention":["The iBundler service has been implemented as an agency\ncomposed of agents and software components that cooper-\natively interact to offer a negotiation support service. The\nservice can be employed by both buyers and auctioneers.\nFigure 1 depicts the components of the agency along with\nthe fundamental connections of buyers and providers with\nthe service. Next we make explicit the main functionality of\nits members:\n[Logger agent]. It represents the interface of the iBundler\nagency to the world. It manages the access to the agency for\nboth buyers and providers.\n[Manager agent]. Agent devoted to providing the solution\nof the problem of choosing the set of bids that best matches\na user\u2019s requirements. It offers the following services: bro-\nkering service to forward buyers\u2019 requirements (RFQs) to\nselected providers; collection of bids; winner determination\nin a combinatorial negotiation\/auction; and award of con-\ntracts on behalf of buyers. Furthermore it bundles each RFQ\nand its bids into a negotiation problem to be conveyed to the\nTranslator agent; and extracts the solution to the negotiation\nproblem handled back by the Translator agent.\n[Translator agent]. It is in charge of translating problems\nexpressed in FIPA compliant format into XML format, un-\nderstandable by the Solver component, and vice versa.\n[Solver component]. The XML specification is parsed into\nan MIP formulation and solved using available MIP solvers.\nOur formulation of the problem (Giovannucci et al. 2004)\ncan be regarded as similar to the binary multi-unit combi-\nnatorial reverse auction winner determination problem with\nside constraints (Sandholm et al. 2002). Expressing the\nproblem as an MIP problem with side constraints enables its\nresolution by standard algorithms and commercially avail-\nable software. With these considerations in mind the Solver\ncomponent has been modelled and implemented as a mixed\ninteger program(MIP) problem: a version using ILOG\n"],"Page":2,"Number":1,"Type":"Figure","CaptionBB":[109,246,358,260],"Height":1169,"Width":827,"DPI":100,"ImageBB":[113,123,356,236]}