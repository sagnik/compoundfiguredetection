{"Caption":"Figure 6: Average fraction of uncovered hosts.","ImageText":[{"Text":"0.1","TextBB":[138.99,121.767,149.629,128.847],"Rotation":0},{"Text":"Average","TextBB":[110.684,197.259,117.764,225.764],"Rotation":3},{"Text":"fraction","TextBB":[110.684,170.033,117.764,195.131],"Rotation":3},{"Text":"of","TextBB":[110.684,161.521,117.764,167.905],"Rotation":3},{"Text":"uncovered","TextBB":[110.684,123.655,117.764,159.393],"Rotation":3},{"Text":"hosts","TextBB":[110.684,103.234,117.764,121.527],"Rotation":3},{"Text":"Random","TextBB":[305.058,87.3986,333.984,94.4789],"Rotation":0},{"Text":"Uniform","TextBB":[307.194,95.0528,333.985,102.133],"Rotation":0},{"Text":"Weighted","TextBB":[301.653,102.707,333.985,109.787],"Rotation":0},{"Text":"DWeighted","TextBB":[296.126,110.363,333.985,117.443],"Rotation":0},{"Text":"0.01","TextBB":[134.734,173.969,149.63,181.05],"Rotation":0},{"Text":"0.001","TextBB":[130.479,226.172,149.63,233.252],"Rotation":0},{"Text":"2","TextBB":[153.693,249.556,157.949,256.636],"Rotation":0},{"Text":"3","TextBB":[180.37,249.556,184.625,256.636],"Rotation":0},{"Text":"4","TextBB":[207.082,249.556,211.338,256.636],"Rotation":0},{"Text":"5","TextBB":[233.757,249.556,238.013,256.636],"Rotation":0},{"Text":"6","TextBB":[260.433,249.556,264.689,256.636],"Rotation":0},{"Text":"7","TextBB":[287.146,249.556,291.402,256.636],"Rotation":0},{"Text":"8","TextBB":[313.822,249.556,318.078,256.636],"Rotation":0},{"Text":"9","TextBB":[340.536,249.556,344.792,256.636],"Rotation":0},{"Text":"10","TextBB":[365.083,249.556,373.595,256.636],"Rotation":0},{"Text":"Load","TextBB":[245.006,261.038,262.029,268.118],"Rotation":0},{"Text":"limit","TextBB":[264.157,261.038,277.758,268.118],"Rotation":0}],"Mention":["Using simulation, we now evaluate our heuristics in\nterms of core size, coverage, and load as a function of\nthe load limit L. Figures 4\u20137 present the results of our\nsimulations. In these figures, we vary L from the mini-\nmum 2 through a high load of 10. All the points shown\nin these graphs are the averages of eight simulated runs\nwith error bars (although they are too narrow to be seen\nin some cases). For Figures 4\u20136, we use the standard er-\nror to determine the limits of the error bars, whereas for\nFigure 7 we use the maximum and minimum observed\namong our samples. When using load limit as a thresh-\nold, the order in which hosts request cores from H will\nproduce different results. In our experiments, we ran-\ndomly choose eight different orders of enumerating H\nfor constructing cores. For each heuristic, each run of\nthe simulator uses a different order. Finally, we vary the\ncore size of Random using the load limit L to illustrate\nits effectiveness across a range of core sizes.\n","By covering classes of operating systems in our cores,\nwe guarantee that pathogens that exploit vulnerabilities\non a single platform are not able to compromise all the\nmembers of a coreC of a particular host h, assuming that\nC covers all attributes of h. Even if Core(h) leaves some\nattributes uncovered, h is still protected against attacks\ntargeting covered attributes. Referring back to Figure 6,\nthe majority of the cores have maximum coverage. We\nalso observed in the previous section that, for cores that\ndo not have maximum coverage, usually it is only a sin-\ngle uncovered attribute.\n","This same phenomenon can be observed in Figure 6.\nIn this figure, we plot the average fraction of hosts that\nare not fully covered, which is an alternative way of vi-\nsualizing coverage. We observe that there is a share of\nthe population of hosts that are not fully covered, but this\nshare is very small forUniform and its variations. Such a\nset is likely to exist due to the non-deterministic choices\nwe make in our heuristics when forming cores. These un-\ncovered hosts, however, are not fully unprotected. From\nour simulation traces, we note the average number of un-\ncovered attributes is very small for Uniform and its vari-\nations. In all runs, we have just a few hosts that do not\nhave all their attributes covered, and in the majority of\nthe instances there is just a single uncovered attribute.\nFinally, we show the resulting variance in load. Since\nthe heuristics limit each host to be in no more than L\ncores, the maximum load equals L. The variance in-\ndicates how fairly the load is spread among the hosts.\nAs expected,Random does well, having the lowest vari-\nance among all the algorithms and for all values of L.\nOrdering the greedy heuristics by their variance in load,\nwe have Uniform ≻ Weighted ≻ DWeighted. This is\nnot surprising since we introduced the weighted selec-\ntion exactly to better balance the load. It is interesting to\nobserve that for every value of L, the load variance ob-\ntained for Uniform is close to L. This means that there\nwere several hosts not participating in any core and sev-\neral other hosts participating in L cores.\nA larger variance in load may not be objectionable in\npractice as long as a maximum load is enforced. Given\n","Under our assumptions, informed replication miti-\ngates the effects of a worm that exploits vulnerabilities\non a service that exists across multiple operating sys-\ntems, and of a worm that exploits vulnerabilities on ser-\nvices in a single operating system. Figure 6 presents a\nconservative estimate on the percentage of the popula-\ntion that is unprotected in the case of an outbreak of such\na pathogen. Assuming conservatively that every host that\nis not fully covered has the same uncovered attribute, the\nnumbers in the graph give the fraction of the population\nthat can be affected in the case of an outbreak. As can be\nseen, this fraction is very small.\n"],"Page":10,"Number":6,"Type":"Figure","CaptionBB":[113,286,373,300],"Height":1100,"Width":850,"DPI":100,"ImageBB":[108,82,376,269]}