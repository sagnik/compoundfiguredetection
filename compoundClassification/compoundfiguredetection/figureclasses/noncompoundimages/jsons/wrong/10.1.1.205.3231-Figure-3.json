{"Caption":"Figure 3: Screen shots: CO NLJ and CC NLJ on P4","ImageText":[{"Text":"(a)","TextBB":[99.6986,301.208,113.521,314.284],"Rotation":0},{"Text":"CC","TextBB":[117.743,301.208,134.355,314.284],"Rotation":0},{"Text":"NLJ","TextBB":[138.842,301.208,160.285,314.284],"Rotation":0},{"Text":"with","TextBB":[163.386,301.208,185.527,314.284],"Rotation":0},{"Text":"the","TextBB":[188.64,301.208,203.858,314.284],"Rotation":0},{"Text":"block","TextBB":[206.971,301.208,234.641,314.284],"Rotation":0},{"Text":"size","TextBB":[237.754,301.208,257.118,314.284],"Rotation":0},{"Text":"varied","TextBB":[260.231,301.208,291.052,314.284],"Rotation":0},{"Text":"(b)","TextBB":[378.654,301.208,393.174,314.284],"Rotation":0},{"Text":"CC","TextBB":[397.396,301.208,414.008,314.284],"Rotation":0},{"Text":"NLJ","TextBB":[418.493,301.208,439.937,314.284],"Rotation":0},{"Text":"(best)","TextBB":[443.05,301.208,471.405,314.284],"Rotation":0},{"Text":"(c)","TextBB":[624.047,301.208,637.87,314.284],"Rotation":0},{"Text":"CO","TextBB":[642.091,301.208,659.388,314.284],"Rotation":0},{"Text":"NLJ","TextBB":[663.875,301.208,685.319,314.284],"Rotation":0}],"Mention":["ache misses reach their minimum at different block sizes. This is\nvidence of a disadvantage of cache-conscious algorithms, i.e., they\nften optimize the performance for a specific level in the memory\nierarchy, but do not optimize for all levels of the memory hierar-\nhy. Note, there are a very small number of outliers in the measure-\nents. A possible reason is the casual error of the profiling tool [3].\nevertheless, the accumulated results are stable in our experiments.\nFigures 3 (b, c) show the screen shots of evaluating the query\nith the best CC NLJ and CO NLJ, respectively. The best CC NLJ\nas a block size of 128K bytes. Compared with the best CC NLJ,\nO NLJ has a consistently good performance on the L1, the L2\nnd TLB. This performance advantage shows the power of auto-\natic optimization for all levels of the memory hierarchy achieved\ny cache-oblivious techniques. The execution time of CO NLJ is\nimilar to that of the best CC NLJ.\nIn addition to the runtime performance results, we will demon-\ntrate the working mechanisms of our cache-oblivious algorithms.\n. REFERENCES\n1] A. Ailamaki. Database Architectures for New Hardware.\nVLDB, 2004.\n","\n"],"Page":3,"Number":3,"Type":"Figure","CaptionBB":[284,332,564,347],"Height":1169,"Width":850,"DPI":100,"ImageBB":[89,84,761,317]}