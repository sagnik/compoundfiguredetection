{"Caption":"Figure 2: Comparison of development costs","ImageText":[],"Mention":["We demonstrate experimentally the cost-\neffectiveness of MDF in hybridization using the TSP \ntest problems obtained from TSPLIB [16]. The most \nobvious and necessary incentive for using a framework \nis cost-savings in development time. However, it is \ndifficult to measure accurately the amount of efforts \nrequired due to the numerous affecting factors. As \nsuch, we infer from the lines of codes to reveals at \nleast partially the programming efforts. We understand \nthat judging by the number of line of codes alone is \noften inadequate to reflect the development time, as \nsome programmers are known to write condensed \ncodes. In addition, this metric only considers the \nimplementation time and not the validation time. \nIntuitionally, if each hybrid scheme was developed \nindependently, they would be validated separately. An \nimplicit advantage of MDF is its capability to recycle \nvalidated applications and hence it could save \nconsiderable resources especially in complex software \nsuch as meta-heuristic hybridization. Unfortunately, \nthis validating cost as well as other development costs \ncould not be easily recorded and we present in Figure \n2 the lines of development codes as an informal \nrepresentation of the developmental efforts. From the \ncomparison, it is apparent that developing strict TS and \nACO requires less effort than to build from scratch. \nThe large amount of codes in MDF and the relatively \nsmaller additional codes to formulate TSP, strongly \nsuggests that MDF provides the bulk of the \n"],"Page":5,"Number":2,"Type":"Figure","CaptionBB":[469,406,715,421],"Height":1100,"Width":850,"DPI":100,"ImageBB":[438,179,753,403]}