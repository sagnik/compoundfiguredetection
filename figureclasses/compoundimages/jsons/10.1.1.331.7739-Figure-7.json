{"Caption":"Figure 7: Cube pruning vs. full-integration (with beam search) on phrase-based decoding.","ImageText":[{"Text":"0.245","TextBB":[470.954,109.968,501.534,121.273],"Rotation":0},{"Text":"full-integration","TextBB":[228.163,125.245,304.918,136.551],"Rotation":0},{"Text":"(Cubit)","TextBB":[308.316,125.245,344.983,136.551],"Rotation":0},{"Text":"0.240","TextBB":[470.954,128.737,501.534,140.043],"Rotation":0},{"Text":"cube","TextBB":[234.259,144.801,260.757,156.107],"Rotation":0},{"Text":"pruning","TextBB":[264.155,144.801,304.916,156.107],"Rotation":0},{"Text":"(Cubit)","TextBB":[308.314,144.801,344.981,156.107],"Rotation":0},{"Text":"0.235","TextBB":[470.954,147.419,501.534,158.725],"Rotation":0},{"Text":"88","TextBB":[135.043,159.555,148.634,170.861],"Rotation":0},{"Text":"BLEU","TextBB":[446.723,199.677,458.028,231.602],"Rotation":3},{"Text":"score","TextBB":[446.723,166.396,458.028,196.279],"Rotation":3},{"Text":"average","TextBB":[115.823,208.163,127.129,252.322],"Rotation":3},{"Text":"model","TextBB":[115.823,171.485,127.129,204.766],"Rotation":3},{"Text":"cost","TextBB":[115.823,145.671,127.129,168.087],"Rotation":3},{"Text":"92","TextBB":[135.043,119.92,148.634,131.226],"Rotation":0},{"Text":"84","TextBB":[135.043,199.277,148.634,210.583],"Rotation":0},{"Text":"80","TextBB":[135.043,238.912,148.634,250.218],"Rotation":0},{"Text":"0.230","TextBB":[470.954,166.19,501.534,177.495],"Rotation":0},{"Text":"0.225","TextBB":[470.954,184.959,501.534,196.265],"Rotation":0},{"Text":"0.220","TextBB":[470.954,203.641,501.534,214.947],"Rotation":0},{"Text":"0.215","TextBB":[470.954,222.412,501.534,233.718],"Rotation":0},{"Text":"0.210","TextBB":[470.954,241.182,501.534,252.487],"Rotation":0},{"Text":"0.205","TextBB":[470.954,259.865,501.534,271.17],"Rotation":0},{"Text":"76","TextBB":[135.043,278.634,148.634,289.94],"Rotation":0},{"Text":"10","TextBB":[146.454,292.079,160.045,303.384],"Rotation":0},{"Text":"2","TextBB":[160.045,287.723,165.481,296.767],"Rotation":0},{"Text":"10","TextBB":[207.914,292.079,221.505,303.384],"Rotation":0},{"Text":"3","TextBB":[221.505,287.723,226.941,296.767],"Rotation":0},{"Text":"10","TextBB":[269.373,292.079,282.964,303.384],"Rotation":0},{"Text":"4","TextBB":[282.964,287.723,288.401,296.767],"Rotation":0},{"Text":"10","TextBB":[330.834,292.079,344.426,303.384],"Rotation":0},{"Text":"5","TextBB":[344.425,287.723,349.862,296.767],"Rotation":0},{"Text":"10","TextBB":[392.294,292.079,405.885,303.384],"Rotation":0},{"Text":"6","TextBB":[405.885,287.723,411.322,296.767],"Rotation":0},{"Text":"average","TextBB":[157.625,309.19,201.784,320.495],"Rotation":0},{"Text":"number","TextBB":[205.181,309.19,246.615,320.495],"Rotation":0},{"Text":"of","TextBB":[250.012,309.19,260.206,320.495],"Rotation":0},{"Text":"hypotheses","TextBB":[263.604,309.19,326.108,320.495],"Rotation":0},{"Text":"per","TextBB":[329.506,309.19,347.167,320.495],"Rotation":0},{"Text":"sentence","TextBB":[350.565,309.19,400.163,320.495],"Rotation":0},{"Text":"Pharaoh","TextBB":[629.675,230.532,675.875,241.837],"Rotation":0},{"Text":"full-integration","TextBB":[559.061,247.555,635.816,258.861],"Rotation":0},{"Text":"(Cubit)","TextBB":[639.214,247.555,675.881,258.861],"Rotation":0},{"Text":"cube","TextBB":[565.158,264.579,591.656,275.884],"Rotation":0},{"Text":"pruning","TextBB":[595.054,264.579,635.815,275.884],"Rotation":0},{"Text":"(Cubit)","TextBB":[639.213,264.579,675.879,275.884],"Rotation":0},{"Text":"0.200","TextBB":[470.954,278.634,501.534,289.94],"Rotation":0},{"Text":"10","TextBB":[499.352,292.079,512.944,303.384],"Rotation":0},{"Text":"2","TextBB":[512.944,287.723,518.38,296.767],"Rotation":0},{"Text":"10","TextBB":[555.312,292.079,568.903,303.384],"Rotation":0},{"Text":"3","TextBB":[568.903,287.723,574.34,296.767],"Rotation":0},{"Text":"10","TextBB":[611.273,292.079,624.864,303.384],"Rotation":0},{"Text":"4","TextBB":[624.864,287.723,630.301,296.767],"Rotation":0},{"Text":"10","TextBB":[667.233,292.079,680.824,303.384],"Rotation":0},{"Text":"5","TextBB":[680.824,287.723,686.261,296.767],"Rotation":0},{"Text":"10","TextBB":[723.193,292.079,736.784,303.384],"Rotation":0},{"Text":"6","TextBB":[736.784,287.723,742.22,296.767],"Rotation":0},{"Text":"average","TextBB":[499.523,309.19,543.682,320.495],"Rotation":0},{"Text":"number","TextBB":[547.08,309.19,588.513,320.495],"Rotation":0},{"Text":"of","TextBB":[591.911,309.19,602.104,320.495],"Rotation":0},{"Text":"hypotheses","TextBB":[605.502,309.19,668.007,320.495],"Rotation":0},{"Text":"per","TextBB":[671.404,309.19,689.066,320.495],"Rotation":0},{"Text":"sentence","TextBB":[692.463,309.19,742.061,320.495],"Rotation":0},{"Text":"(a)","TextBB":[258.539,330.306,272.361,341.514],"Rotation":0},{"Text":"(b)","TextBB":[589.089,330.306,603.611,341.514],"Rotation":0}],"Mention":["3In our tests, Cubit always obtains a BLEU score within\n0.004 of Pharaoh\u2019s (Figure 7(b)). Source code available at\n","of search quality, the speed-up is always better than\na factor of 10. The speed-up at the lowest search-\nerror level is a factor of 32. Figure 7(b) makes a\nsimilar comparison but measures search quality by\nBLEU, which shows an even larger relative speed-up\nfor a given BLEU score, because translations with\nvery different model costs might have similar BLEU\nscores. It also shows that our full-integration imple-\nmentation in Cubit faithfully reproduces Pharaoh\u2019s\nperformance. Fixing the stack size to 100 and vary-\ning the threshold yielded a similar result.\n","derivation trees remain context-free and the search\nspace is still a hypergraph, where we can adapt the\nmethods presented in Sections 3 and 4.\nThe data set is same as in Section 5.1, except that\nwe also parsed the English-side using a variant of\nthe Collins (1997) parser, and then extracted 24.7M\ntree-to-string rules using the algorithm of (Galley et\nal., 2006). Since our tree-to-string rules may have\nmany variables, we first binarize each hyperedge in\nthe forest on the target projection (Huang, 2007).\nAll the three +LM decoding methods to be com-\npared below take these binarized forests as input. For\ncube growing, we use a non-duplicate k-best method\n(Huang et al., 2006) to get 100-best unique transla-\ntions according toâˆ’LM to estimate the lower-bound\nheuristics.4 This preprocessing step takes on aver-\nage 0.12 seconds per sentence, which is negligible\nin comparison to the +LM decoding time.\nFigure 8(a) compares cube growing and cube\npruning against full-integration under various beam\nsettings in the same fashion of Figure 7(a). At the\nlowest level of search error, the relative speed-up\nfrom cube growing and cube pruning compared with\nfull-integration is by a factor of 9.8 and 4.1, respec-\ntively. Figure 8(b) is a similar comparison in terms\nof BLEU scores and shows an even bigger advantage\nof cube growing and cube pruning over the baseline.\n"],"Page":7,"Number":7,"Type":"Figure","CaptionBB":[151,358,696,374],"Height":1100,"Width":850,"DPI":100,"ImageBB":[113,107,744,343]}