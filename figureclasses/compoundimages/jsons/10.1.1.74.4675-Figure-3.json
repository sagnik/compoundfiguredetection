{"Caption":"Figure 3. Server performance as a function of server period. The server period of the application is constant.","ImageText":[{"Text":"Tardiness","TextBB":[157.205,655.284,199.123,664.117],"Rotation":0},{"Text":"vs.","TextBB":[201.778,655.284,213.981,664.117],"Rotation":0},{"Text":"Server","TextBB":[216.635,655.284,244.756,664.117],"Rotation":0},{"Text":"Period","TextBB":[247.411,655.284,275.006,664.117],"Rotation":0},{"Text":"(application","TextBB":[277.661,655.284,326.483,664.117],"Rotation":0},{"Text":"period=0.04)","TextBB":[329.137,655.284,383.01,664.117],"Rotation":0},{"Text":"Context","TextBB":[541.618,655.284,574.522,664.117],"Rotation":0},{"Text":"Switches","TextBB":[577.177,655.284,615.381,664.117],"Rotation":0},{"Text":"vs.","TextBB":[618.035,655.284,630.238,664.117],"Rotation":0},{"Text":"Server","TextBB":[632.893,655.284,661.014,664.117],"Rotation":0},{"Text":"Period","TextBB":[663.668,655.284,691.264,664.117],"Rotation":0},{"Text":"0.6","TextBB":[111.696,669.608,124.969,678.44],"Rotation":0},{"Text":"Avg.","TextBB":[434.177,787.089,443.01,806.196],"Rotation":3},{"Text":"Context","TextBB":[434.177,751.53,443.01,784.435],"Rotation":3},{"Text":"Switches\/Second","TextBB":[434.177,675.638,443.01,748.876],"Rotation":3},{"Text":"Avg.","TextBB":[87.8437,804.334,96.6761,823.44],"Rotation":3},{"Text":"Tardiness","TextBB":[87.8437,759.761,96.6761,801.679],"Rotation":3},{"Text":"(fraction","TextBB":[87.8437,722.616,96.6761,757.106],"Rotation":3},{"Text":"of","TextBB":[87.8437,711.998,96.6761,719.962],"Rotation":3},{"Text":"app.","TextBB":[87.8437,690.762,96.6761,709.344],"Rotation":3},{"Text":"period)","TextBB":[87.8437,658.393,96.6761,688.108],"Rotation":3},{"Text":"0.5","TextBB":[111.696,692.143,124.969,700.975],"Rotation":0},{"Text":"0.4","TextBB":[111.696,714.677,124.969,723.51],"Rotation":0},{"Text":"0.3","TextBB":[111.696,737.212,124.969,746.045],"Rotation":0},{"Text":"0.2","TextBB":[111.696,759.747,124.969,768.579],"Rotation":0},{"Text":"0.1","TextBB":[111.696,782.282,124.969,791.114],"Rotation":0},{"Text":"CBS","TextBB":[346.773,787.485,366.405,796.317],"Rotation":0},{"Text":"BEBS","TextBB":[340.929,797.034,366.405,805.867],"Rotation":0},{"Text":"0","TextBB":[119.66,804.816,124.969,813.649],"Rotation":0},{"Text":"0","TextBB":[129.371,814.365,134.68,823.197],"Rotation":0},{"Text":"0.1","TextBB":[179.005,814.365,192.277,823.197],"Rotation":0},{"Text":"0.2","TextBB":[232.62,814.365,245.892,823.197],"Rotation":0},{"Text":"0.3","TextBB":[286.235,814.365,299.508,823.197],"Rotation":0},{"Text":"Server","TextBB":[234.028,828.687,262.148,837.52],"Rotation":0},{"Text":"Period","TextBB":[264.803,828.687,292.398,837.52],"Rotation":0},{"Text":"(s)","TextBB":[295.053,828.687,306.187,837.52],"Rotation":0},{"Text":"0.4","TextBB":[339.85,814.365,353.123,823.197],"Rotation":0},{"Text":"0.5","TextBB":[393.466,814.365,406.738,823.197],"Rotation":0},{"Text":"(a)","TextBB":[109.667,846.273,121.853,856.235],"Rotation":0},{"Text":"The","TextBB":[126.5,846.273,143.748,856.235],"Rotation":0},{"Text":"average","TextBB":[146.5,846.273,180.248,856.235],"Rotation":0},{"Text":"tardiness","TextBB":[183.166,846.273,222.139,856.235],"Rotation":0},{"Text":"of","TextBB":[225.333,846.273,234.519,856.235],"Rotation":0},{"Text":"a","TextBB":[237.333,846.273,242.248,856.235],"Rotation":0},{"Text":"periodic","TextBB":[245,846.273,280.914,856.235],"Rotation":0},{"Text":"soft-real","TextBB":[284,846.273,320.577,856.235],"Rotation":0},{"Text":"time","TextBB":[323.666,846.273,343.248,856.235],"Rotation":0},{"Text":"application.","TextBB":[346.166,846.273,397.434,856.235],"Rotation":0},{"Text":"300","TextBB":[455.375,669.608,471.302,678.44],"Rotation":0},{"Text":"CBS","TextBB":[693.107,677.389,712.739,686.222],"Rotation":0},{"Text":"BEBS","TextBB":[687.262,686.939,712.738,695.771],"Rotation":0},{"Text":"280","TextBB":[455.375,688.944,471.302,697.777],"Rotation":0},{"Text":"260","TextBB":[455.375,708.232,471.302,717.064],"Rotation":0},{"Text":"240","TextBB":[455.375,727.568,471.302,736.4],"Rotation":0},{"Text":"220","TextBB":[455.375,746.857,471.302,755.689],"Rotation":0},{"Text":"200","TextBB":[455.375,766.191,471.302,775.024],"Rotation":0},{"Text":"180","TextBB":[455.375,785.48,471.302,794.313],"Rotation":0},{"Text":"160","TextBB":[455.375,804.816,471.302,813.649],"Rotation":0},{"Text":"0","TextBB":[475.705,814.365,481.014,823.197],"Rotation":0},{"Text":"0.1","TextBB":[525.338,814.365,538.61,823.197],"Rotation":0},{"Text":"0.2","TextBB":[578.953,814.365,592.226,823.197],"Rotation":0},{"Text":"0.3","TextBB":[632.568,814.365,645.841,823.197],"Rotation":0},{"Text":"Server","TextBB":[580.361,828.687,608.482,837.52],"Rotation":0},{"Text":"Period","TextBB":[611.136,828.687,638.732,837.52],"Rotation":0},{"Text":"(s)","TextBB":[641.386,828.687,652.52,837.52],"Rotation":0},{"Text":"0.4","TextBB":[686.184,814.365,699.456,823.197],"Rotation":0},{"Text":"(b)","TextBB":[500.833,846.273,513.686,856.235],"Rotation":0},{"Text":"The","TextBB":[518.333,846.273,535.582,856.235],"Rotation":0},{"Text":"average","TextBB":[538.333,846.273,572.081,856.235],"Rotation":0},{"Text":"number","TextBB":[575,846.273,608.686,856.235],"Rotation":0},{"Text":"of","TextBB":[611.667,846.273,620.853,856.235],"Rotation":0},{"Text":"context","TextBB":[623.667,846.273,655.744,856.235],"Rotation":0},{"Text":"switches.","TextBB":[658.833,846.273,699.434,856.235],"Rotation":0},{"Text":"0.5","TextBB":[739.799,814.365,753.072,823.197],"Rotation":0}],"Mention":["Period adaptation is an important aspect of handling\nworkloads in which application properties are unknown a\npriori. For general-purpose workloads, it is not expected\nthat users will want, or even know how, to properly as-\nsign server parameters for the applications they run. Nor\nis it incumbent upon application programmers to build such\nknowledge into their applications. In order to appropriately\nserve best-effort applications, BEBS observes applications\nas they execute and adjusts their server periods dynamically.\nTo test our assertion (in Section 3) that the period of the\nserver impacts both the application response time and the\nscheduling overhead, we measured both the tardiness of a\nsoft-real time task and the number of context switches as\na function of server period. The workload is the same as\nin Figure 1(c) but we varied the period of the server while\nusing a constant load. In Figure 3(a) we see that tardiness\nis generally better at lower periods (and as before BEBS\noutperformed CBS). We also see in Figure 3(b) that lower\nperiods incur more scheduling overhead due to an increased\nnumber of context switches. (BEBS incurs more schedul-\ning overhead than CBS because as CBS replenishes budgets\nof expired tasks it does not always need to preempt them,\nwhereas BEBS always preempts expired tasks and waits un-\ntil idle time before replenishing their budgets). Therefore,\nwe wish to reduce overhead by using larger server periods\nfor CPU-bound tasks that do not need fast response times,\nwhile using shorter periods for the interactive workload for\nbetter performance.\nPeriod adaptation is a major difference between BEBS\nand other aperiodic servers. BEBS servers adjust their pe-\nriod to best suit best-effort workloads, and to provide the\nsame performance expected from time-share scheduling al-\ngorithms. The algorithm adjusts periods by observing past\nexecution rates, and inferring whether tasks are interactive,\ncompute-bound, or soft real-time periodic.\nBefore describing the period adaption algorithm, we will\nmotivate it with an example. Figure 4 shows what happens\nwhen we run 5 best-effort tasks in the BEBS server along\nwith 5 real-time applications. Two of the best-effort tasks\nhave soft periodic deadlines (with frame rates 25 and 12.5\nframes\/sec) that they should be able to meet within their\nshare of CPU, and the other three are compute-bound. In\nthe first run, the aperiodic server periods are not set appro-\npriately. They are all set to the period of the lowest pe-\nriod application\u2014 the result is that the soft-real time tasks\nmiss their deadlines, while the scheduler incurs more con-\ntext switches. In the second run, the server period for all\ntasks is increased, resulting in less overhead but even worse\nreal-time performance. In the third run, server periods are\n"],"Page":6,"Number":3,"Type":"Figure","CaptionBB":[131,876,719,891],"Height":1100,"Width":850,"DPI":100,"ImageBB":[85,652,759,858]}